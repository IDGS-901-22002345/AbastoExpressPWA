# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - AbastoExpressPWA

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        # Utiliza la versión 4 de setup-node
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          # Añadimos cache: 'yarn' para optimizar la instalación
          cache: 'yarn'

      # Instalamos Yarn globalmente
      - name: Install Yarn
        run: npm install -g yarn

      - name: Yarn install, build, and test
        # Usamos Yarn para evitar el error de Rollup/dependencias opcionales de npm
        run: |
          yarn install
          yarn build

      # --- NUEVOS PASOS CLAVE PARA ARRANQUE EN AZURE ---
      - name: Install necessary runtime server package
        # Instalamos 'serve' como dependencia de desarrollo para que se pueda usar con npx
        run: yarn add serve --dev

      - name: Create Azure Startup Script
        # Creamos un script simple para servir la carpeta dist
        run: |
          echo 'npx serve -s dist -l 8080' > startup.sh
          chmod +x startup.sh

      - name: Cleanup and Upload artifact for deployment job
        # Limpiamos las dependencias grandes que no son de tiempo de ejecución.
        # Solo subimos el código compilado (dist) y el script/node_modules esencial.
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: |
            dist
            startup.sh
            # Incluimos package.json y package-lock/yarn.lock para que npx funcione
            package.json
            yarn.lock 
            # Subimos node_modules para que 'serve' esté garantizado
            node_modules/serve
            node_modules/.bin/serve # Aseguramos el ejecutable

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          # CORRECCIÓN CLAVE: Descargamos todo el contenido al directorio raíz ('.')
          path: . 

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_15616D1BC0A54364ACDD1B2306E70DC7 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_707D3FC0E54D47DF8CFF53AFA22F604E }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_BD6889BFEB024B1BA8D235604E199458 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'AbastoExpressPWA'
          slot-name: 'Production'
          # Desplegamos el directorio actual ('.'), que ahora contiene dist y startup.sh
          package: .
